<?xml version="1.0"?>
<ruleset name="WordPress WooCommerce Coding Standards">
    <description>Apply WordPress and WooCommerce Coding Standards to all Core files</description>

    <!-- Exclude paths -->
    <exclude-pattern>tests/</exclude-pattern>
    <exclude-pattern>woo-includes/woo-functions.php</exclude-pattern>
    <exclude-pattern>woo-includes/class-wc-dependencies.php</exclude-pattern>
    <exclude-pattern>*/node_modules/*</exclude-pattern>
    <exclude-pattern>*/vendor/*</exclude-pattern>

    <!-- Configs -->
    <config name="minimum_supported_wp_version" value="5.0" />
    <config name="testVersion" value="6.3" />
    <config name="text_domain" value="quick-plugin-switcher"/>

    <!-- WordPress Rules -->
    <rule ref="WordPress-Core"/>
    <rule ref="WordPress.CodeAnalysis.EmptyStatement"/>

    <rule ref="WordPress-Docs"/>
    <rule ref="WordPress-Extra">
        <exclude name="WordPress.WP.TimezoneChange.timezone_change_date_default_timezone_set"/>
        <exclude name="Squiz.Commenting.FileComment.SpacingAfterComment" />
    </rule>

    <rule ref="WordPressVIPMinimum"/>
    <rule ref="WordPress-VIP-Go"/>
    <rule ref="WordPress.WP.I18n"/>

    <!-- WooCommerce Rules -->
    <rule ref="WooCommerce"/>
    <rule ref="WooCommerce-Core"/>

    <!-- Covers rule: Use single and double quotes when appropriate.
         If you're not evaluating anything in the string, use single quotes. -->
    <rule ref="Squiz.Strings.DoubleQuoteUsage.NotRequired"/>

    <!--
    #############################################################################
    Handbook: PHP - Indentation.
    Ref: https://make.wordpress.org/core/handbook/best-practices/coding-standards/php/#indentation
    #############################################################################-->
    <!-- Covers rule: Your indentation should always reflect logical structure. -->
    <rule ref="Generic.WhiteSpace.ScopeIndent">
        <properties>
            <property name="exact" value="false"/>
            <property name="indent" value="4"/>
            <property name="tabIndent" value="true"/>
            <property name="ignoreIndentationTokens" type="array">
                <element value="T_HEREDOC"/>
                <element value="T_NOWDOC"/>
                <element value="T_INLINE_HTML"/>
            </property>
        </properties>
    </rule>
    <rule ref="WordPress.Arrays.ArrayIndentation"/>

    <!-- PHPCompatibility Rules. -->
    <rule ref="PHPCompatibility">
        <exclude-pattern>tests/</exclude-pattern>
    </rule>

    <!-- Exclude invalid class file name. -->
    <rule ref="WordPress.Files.FileName.InvalidClassFileName">
        <exclude-pattern>functions.php</exclude-pattern>
    </rule>

    <!--Exclude WooCommerce sanitization function -->
    <rule ref="WordPress.Security.ValidatedSanitizedInput">
        <properties>
            <property name="customSanitizingFunctions" type="array">
                <element value="wc_clean"/>
            </property>
        </properties>
    </rule>

    <!-- Allow Restricted function dbDelta -->
    <rule ref="WordPressVIPMinimum.Functions.RestrictedFunctions">
        <properties>
            <property name="exclude" type="array">
                <element value="dbDelta"/>
            </property>
        </properties>
    </rule>

    <!-- Allow meta queries -->
    <rule ref="WordPress.DB">
        <exclude name="WordPress.DB.DirectDatabaseQuery"/>
        <exclude name="WordPress.DB.SlowDBQuery"/>
    </rule>


    <!-- Evanto coding standards starts here -->

    <!-- Tabs must be used for indentation. -->
    <arg name="tab-width" value="4"/>
    <rule ref="Generic.WhiteSpace.DisallowSpaceIndent"/>

    <!-- The use of PHP short tags is not allowed. -->
    <rule ref="Generic.PHP.DisallowShortOpenTag"/>
    <rule ref="Generic.PHP.DisallowAlternativePHPTags"/>

    <!-- WordPress theme files and directories must be named using lowercase letters. Words must be separated by hyphens, not camelCase or underscores. -->
    <rule ref="WordPress.Files.FileName"/>

    <!-- Validate, sanitize, and escape everything. -->
    <rule ref="WordPress.Security"/>
    <rule ref="WordPress.WP"/>

    <!-- Direct database access is prohibited. Instead, make use of the WordPress Database API.. -->
    <rule ref="WordPress.DB"/>

    <!-- Single-statement inline control structures are prohibited. Either curly braces should be used (even where they are optional) or where appropriate the alternative syntax for control structures may be used. -->
    <rule ref="Squiz.ControlStructures.ControlSignature"/>
    <rule ref="Generic.ControlStructures.InlineControlStructure"/>

    <!-- A unique prefix must be used for all function names, classes, hooks, public/global variables, action/filter hooks, custom image sizes, constants, database entries, theme-specific scripts and theme-specific styles to avoid conflicts with plugins and other themes. -->
    <rule ref="WordPress.NamingConventions.PrefixAllGlobals"/>

    <!-- Rule: The goto statement must never be used. -->
    <rule ref="Generic.PHP.DiscourageGoto">
        <type>error</type>
        <message>The "goto" language construct should not be used.</message>
    </rule>

    <!-- The eval() function must not be used. -->
    <rule ref="Squiz.PHP.Eval.Discouraged">
        <type>error</type>
        <message>eval() is a security risk so not allowed.</message>
    </rule>

    <!-- The create_function() function has been deprecated as of PHP 7.2.0 and must no longer be used. -->
    <rule ref="WordPress.PHP.RestrictedPHPFunctions"/>

    <!-- The "@" operator must not be used to suppress error messages or notices. -->
    <rule ref="WordPress.PHP.NoSilencedErrors"/>

    <!-- Using the POSIX Regex functions ereg_* arenâ€™t allowed. -->
    <rule ref="WordPress.PHP.POSIXFunctions"/>

    <!-- A few rules not mentioned in the official documentation. -->
    <rule ref="Generic.Files.ByteOrderMark"/>

    <!-- Evanto coding standards ends here -->

</ruleset>

